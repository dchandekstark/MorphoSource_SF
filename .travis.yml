# Based on https://github.com/duke-libraries/rdr/blob/develop/.travis.yml

language: ruby
rvm:
  - 2.4.2
services:
  - postgresql
  # Use redis for background jobs
  - redis-server
addons:
  firefox: '61.0'
before_install:
  # from http://www.columbia.edu/~njn2118/journal/2016/10/28.html
  - wget https://github.com/mozilla/geckodriver/releases/download/v0.21.0/geckodriver-v0.21.0-linux64.tar.gz
  - mkdir geckodriver
  - tar -xzf geckodriver-v0.21.0-linux64.tar.gz -C geckodriver
  - export PATH=$PATH:$PWD/geckodriver
  # begin FITS setup --------
  - mkdir $TRAVIS_BUILD_DIR/download
  - cd $TRAVIS_BUILD_DIR/download
  - export FITSVERSION=1.3.0
  - curl http://projects.iq.harvard.edu/files/fits/files/fits-$FITSVERSION.zip -o fits.zip
  - mkdir fits-$FITSVERSION
  - unzip fits.zip -d fits-$FITSVERSION
  - chmod a+x fits-$FITSVERSION/*.sh
  - curl -o fits.xml https://raw.githubusercontent.com/MorphoSource/morphosource-vagrant/master/install_scripts/fits_config/fits.xml
  - curl -o exiftool_dicom_to_fits.xslt https://raw.githubusercontent.com/MorphoSource/morphosource-vagrant/master/install_scripts/fits_config/exiftool/exiftool_dicom_to_fits.xslt
  - curl -o exiftool_xslt_map.xml https://raw.githubusercontent.com/MorphoSource/morphosource-vagrant/master/install_scripts/fits_config/exiftool/exiftool_xslt_map.xml
  - cp fits.xml fits-$FITSVERSION/xml/.
  - cp exiftool_dicom_to_fits.xslt fits-$FITSVERSION/xml/exiftool/.
  - cp exiftool_xslt_map.xml fits-$FITSVERSION/xml/exiftool/.
  - export PATH=$PATH:$TRAVIS_BUILD_DIR/download/fits-$FITSVERSION
  - fits.sh -v
  # verify fits are configured properly
  # - fits.sh -i "/home/travis/build/MorphoSource/MorphoSource_SF/spec/fixtures/CMB06020_R-m1_011.dcm"
  # end FITS setup --------

  # begin Blender setup --------
  - cd $TRAVIS_BUILD_DIR/download
  - curl https://download.blender.org/release/Blender2.79/blender-2.79b-linux-glibc219-x86_64.tar.bz2 -o blender.tar.bz2
  - tar xjf blender.tar.bz2
  - mv blender-2.79b-linux-glibc219-x86_64 blender
  - curl -o blender_characterize_mesh.py https://raw.githubusercontent.com/MorphoSource/morphosource-vagrant/master/install_scripts/blender_config/scripts/blender_characterize_mesh.py
  - curl -o blender_derive_mesh.py https://raw.githubusercontent.com/MorphoSource/morphosource-vagrant/master/install_scripts/blender_config/scripts/blender_derive_mesh.py
  - mkdir blender/scripts
  - cp blender_characterize_mesh.py blender/scripts/.
  - cp blender_derive_mesh.py blender/scripts/.
  - git clone https://github.com/KhronosGroup/glTF-Blender-IO.git
  - cp -r glTF-Blender-IO/addons/io_scene_gltf2 blender/2.79/scripts/addons/
  - export BLENDER_PATH="$TRAVIS_BUILD_DIR/download/blender"
  - $BLENDER_PATH/blender -v
  # verify blender is configured properly
  #- $TRAVIS_BUILD_DIR/download/blender/blender --background --python $TRAVIS_BUILD_DIR/download/blender/scripts/blender_characterize_mesh.py  -- $TRAVIS_BUILD_DIR/spec/fixtures/bunny/bunny.x3d
  # end Blender setup --------

  # begin gltf-pipeline setup --------
  - npm install -g gltf-pipeline
  - gltf-pipeline --version
  # end gltf-pipeline setup --------

  - cd $TRAVIS_BUILD_DIR
before_script:
  - "cp .rspec.travis .rspec"
  # Don't need to use role_map if using hydra-role-manager
  # - "cp config/role_map.yml.sample config/role_map.yml"
  - "cp spec/travis_spec_helper.rb spec/spec_helper.rb"
  # Sets up test db name to be travis_ci_test
  - "cp config/database.yml.travis config/database.yml"
  - "psql -c 'create database travis_ci_test;' -U postgres"

script: "bundle exec rake ci"
jdk:
  - oraclejdk8
